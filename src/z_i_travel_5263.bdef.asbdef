managed;
//strict ( 2 );

define behavior for Z_I_TRAVEL_5263 alias Travel
implementation in class zbp_i_travel_5263 unique
persistent table ztb_travel_5263
lock master
authorization master ( instance )
etag master LastChangedAt
{
  // administrative fields: read only
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy;
  // mandatory fields that are required to create a travel
  field ( mandatory ) AgencyId, OverallStatus, BookingFee, CurrencyCode;
  // dynamic field control
  field ( features : instance ) TravelId;
  create;
  update;
  delete;
  // Validations
  validation validateCustomer on save { field CustomerId; }
  validation validateDates on save { field BeginDate, EndDate; }
  validation validateStatus on save { field OverallStatus; }
  // Actions
  action (features : instance) acceptTravel result[1] $self;
  action (features : instance) rejectTravel result[1] $self;
  action createTravelByTeplate result[1] $self;
  association _Booking { create; }
  mapping for ztb_travel_5263 {
                TravelId = travel_id;
                AgencyId = agency_id;
                CustomerId = customer_id;
                BeginDate = begin_date;
                EndDate = end_date;
                BookingFee = booking_fee;
                TotalPrice = total_price;
                CurrencyCode = currency_code;
                Description = description;
                OverallStatus = overall_status;
                CreatedBy = created_by;
                CreatedAt = created_at;
                LastChangedBy = last_changed_by;
                LastChangedAt = last_changed_at;

 }
}

define behavior for Z_I_BOOKING_5263 alias Booking
implementation in class zbp_i_booking_5263 unique
persistent table ztb_booking_5263
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  // static fields control
  field ( readonly ) TravelId;
  // mandatory fields
  field ( mandatory ) CarrierId, ConnectionId, FlightDate, BookingStatus;
  update;
  delete;
  validation validateStatus on save { field BookingStatus; }
  // field ( readonly ) TravelId;
  association _Travel;
  association _BookingSupplement { create; }

  // Deteminations
  determination calculateTotalFlightPrice on modify { field FlightPrice, CurrencyCode; }
  determination calculateTotalSupplPrice on modify { field CurrencyCode; }

  mapping for ztb_booking_5263 {
             TravelId = travel_id;
             BookingId = booking_id;
             BookingDate = booking_date;
             CustomerId = customer_id;
             CarrierId = carrier_id;
             ConnectionId = connection_id;
             FlightDate = flight_date;
             FlightPrice = flight_price;
             CurrencyCode = currency_code;
             BookingStatus = booking_status;
             LastChangedAt = last_changed_at;
   }
}

define behavior for Z_I_BOOKSUPPL_5263 alias Supplement
implementation in class zbp_i_booksuppl_5263 unique
with unmanaged save
//persistent table <???>
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  // static fileds control
  field ( readonly ) TravelId, BookingId;

  //Determinations
  determination calculateTotalSupplPrice on modify { field Price, CurrencyCode; }
  // mandatory fields
  field ( mandatory ) SupplementId, Price;
  update;
  delete;
  //field ( readonly ) TravelId, BookingId;
  association _Travel;
  association _Booking;
  mapping for ztb_booksup_5263 {
                TravelId = travel_id;
                BookingId = booking_id;
                BookingSupplementId = booking_supplement_id;
                SupplementId = supplement_id;
                Price = price;
                CurrencyCode = currency_code;
  }
}